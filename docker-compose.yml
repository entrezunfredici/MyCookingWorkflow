
services:
  traefik:
    image: traefik:v2.10
    command:
        - "--api.insecure=true"
        - "--providers.docker=true"
        - "--providers.docker.exposedbydefault=false"
        - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - mcw_network

  postgres_users:
    image: postgres:16
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASS}
      POSTGRES_DB: ${PG_MCW_USERS_DB}
    volumes:
      - postgres-users-data:/var/lib/postgresql/data
    ports:
      - "${PG_USERS_PORT}:5432"
    networks:
      - mcw_network

  postgres_tools:
    image: postgres:16
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASS}
      POSTGRES_DB: ${PG_MCW_TOOLS_DB}
    volumes:
      - postgres-tools-data:/var/lib/postgresql/data
    ports:
      - "${PG_TOOLS_PORT}:5432"
    networks:
      - mcw_network

  postgres_food:
    image: postgres:16
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASS}
      POSTGRES_DB: ${PG_MCW_FOOD_DB}
    volumes:
      - postgres-food-data:/var/lib/postgresql/data
    ports:
      - "${PG_FOOD_PORT}:5432"
    networks:
      - mcw_network

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "${PGADMIN_PORT}:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - postgres_users
      - postgres_tools
      - postgres_food
    networks:
      - mcw_network

  api_users:
    build:
      context: ./mcw_api_users
      dockerfile: Dockerfile
    environment:
      - PG_USER=${PG_USER}
      - PG_PASS=${PG_PASS}
      - PG_DB=${PG_MCW_USERS_DB}
      - PG_PORT=${PG_USERS_PORT}
      - API_USERS_PORT=${API_USERS_PORT}
    depends_on:
      - postgres_users
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mcw_users.rule=Host(`mcw-users.localhost`)"
      - "traefik.http.services.mcw_users.loadbalancer.server.port=${API_USERS_PORT}"
    ports: #porcs
      - "${API_USERS_PORT}:${API_USERS_PORT}"
    expose:
      - "${API_USERS_PORT}"
    networks:
      - mcw_network

  api_food:
    build:
      context: ./mcw_api_food
      dockerfile: Dockerfile
    environment:
      - PG_USER=${PG_USER}
      - PG_PASS=${PG_PASS}
      - PG_DB=${PG_MCW_FOOD_DB}
      - PG_PORT=${PG_FOOD_PORT}
      - API_FOOD_PORT=${API_FOOD_PORT}
    depends_on:
      - postgres_food
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mcw_food.rule=Host(`mcw-food.localhost`)"
      - "traefik.http.services.mcw_food.loadbalancer.server.port=${API_FOOD_PORT}"
    ports:
      - "${API_FOOD_PORT}:${API_FOOD_PORT}"
    expose:
      - "${API_FOOD_PORT}"
    networks:
      - mcw_network

  api_tools:
    build:
      context: ./mcw_api_tools
      dockerfile: Dockerfile
    environment:
      - PG_USER=${PG_USER}
      - PG_PASS=${PG_PASS}
      - PG_DB=${PG_MCW_TOOLS_DB}
      - PG_PORT=${PG_TOOLS_PORT}
      - API_TOOLS_PORT=${API_TOOLS_PORT}
    depends_on:
      - postgres_tools
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mcw_tools.rule=Host(`mcw-tools.localhost`)"
      - "traefik.http.services.mcw_tools.loadbalancer.server.port=${API_TOOLS_PORT}"
    ports:
      - "${API_TOOLS_PORT}:${API_TOOLS_PORT}"
    expose:
      - "${API_TOOLS_PORT}"
    networks:
      - mcw_network

volumes:
  postgres-users-data:
  postgres-tools-data:
  postgres-food-data:
  pgadmin-data:

networks:
  mcw_network:
    driver: bridge
    #external: true
